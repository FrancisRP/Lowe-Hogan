//----Responsive Font Sizing------------------------------------------------

@mixin responsive-font($min-font-size: $mobile-font-size, $max-font-size: $base-font-size, $min-vw: 480px, $max-vw: 1200px) {
	$u1: unit($min-vw);
	$u2: unit($max-vw);
	$u3: unit($min-font-size);
	$u4: unit($max-font-size);

	@if $u1 == $u2 and $u1 == $u3 and $u1 == $u4 {
		font-size: $min-font-size;

		@if $min-vw != $max-vw {
			@media only screen and (min-width: $min-vw) {
				font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
			}
		}

		@media only screen and (min-width: $max-vw) {
			font-size: $max-font-size;
		}

	} @else {
		@error "Detected mixed units. Please use the same units for all parameters.";
	}
}

//---- Allow for Rem Font Sizing ------------------------------------------------------

@mixin font($size) {
	font-size: calc(#{$size} / 1.2);
	@include mq(tablet) {
		font-size: calc(#{$size} / 1.05);
	}
	@include mq(desktop-wide) {
		font-size: #{$size};
	}
}

//----Box Shadows-----------------------------------------------------------
// @include shadow(1) ~ shadow(6);

@mixin shadow($depth: 2) {
	@if $depth < 1 {
		box-shadow: none;
	} @else if $depth > 5 {
		@warn "Invalid $depth `#{$depth}` for mixin.";
	} @else {
		box-shadow: bottom-shadow($depth), top-shadow($depth);
	}
}

@function top-shadow($depth) {
	$primary-offset: nth(1.5 3 10 14 19, $depth) * 1px;
	$blur: nth(1.5 3 10 14 19, $depth) * 4px;
	$color: rgba(black, nth(.12 .16 .19 .25 .30, $depth));

	@return 0 $primary-offset $blur $color;
}

@function bottom-shadow($depth) {
	$primary-offset: nth(1.5 3 6 10 15, $depth) * 1px;
	$blur: nth(1 3 3 5 6, $depth) * 4px;
	$color: rgba(black, nth(.24 .23 .23 .22 .22, $depth));

	@return 0 $primary-offset $blur $color;
}

//----Border Radius---------------------------------------------------------
// @include border-radius;

@mixin border-radius($radius: 8px) {
	background-clip: padding-box;
	border-radius: $radius;
}

//----Borders---------------------------------------------------------------
// @include border;

@mixin border($width: 1px, $color: $primary) {
	border: $width solid $color;
}

//----Breakpoints-----------------------------------------------------------
// @include mq('tablet') {
//  margin: 10px
// }

$breakpoints: (
		"phone": 400px,
		"phone-wide": 480px,
		"phablet": 560px,
		"tablet-small": 640px,
		"tablet": 768px,
		"tablet-medium": 992px,
		"tablet-wide": 1024px,
		"desktop": 1248px,
		"desktop-middle": 1400px,
		"desktop-wide": 1441px
);

@mixin mq($width, $type: min) {
	@if map-has-key($breakpoints, $width) {
		$width: map-get($breakpoints, $width);
		@if $type == max {
			$width: $width - 1px;
		}

		@media only screen and (#{$type}-width: $width) {
			@content;
		}
	}
}

//----Truncate Strings------------------------------------------------------
// @include truncate(40px)

@mixin truncate($truncation-boundary) {
	max-width: $truncation-boundary;
	white-space: nowrap;
	overflow: hidden;
	text-overflow: ellipsis;
}

//----z-index tracking------------------------------------------------------

@function z($name) {
	@if index($z-indexes, $name) {
		@return (length($z-indexes) - index($z-indexes, $name)) + 1;
	} @else {
		@warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
		@return null;
	}
}

// 1. add class name in index below
$z-indexes: (
	// higher z-index
		'class-name',
		'another-class-name' // lower z-index
);

// 2. add the selector z-index: z('class-name');
// ensure element is not position: static

//---- Colors ------------------------------------------------------

@mixin darken($color) {
	background: darken($color, 4);
}

@mixin lighten($color) {
	background: lighten($color, 4);
}

@mixin blue-gradient {
	background: linear-gradient(180deg, #008CE3 0%, #012D8B 100%);
}

/* ----Full-width Overlay--------------------------------------------------------------- */
// @include overlay;
// @include gradient-overlay(#color-bottom, #color-top)

@mixin overlay($color) {
	overflow: hidden;
	position: relative;
	&:before {
		content: "";
		width: 100%;
		height: 100%;
		position: absolute;
		top: 0;
		left: 0;
		background: $color;
		opacity: 0.3;
		display: block;
		z-index: 1;
	}
}

@mixin gradient-overlay($color-bottom, $color-top) {
  &:before {
	content: "";
	width: 100%;
	height: 100%;
	position: absolute;
	top: 0;
	left: 0;
	background: linear-gradient(180deg, $color-top -54.78%, $color-bottom 100%);
	opacity: 0.3;
	display: block;
	z-index: 1;
  }
}

/* ----Misc.--------------------------------------------------------------- */

@mixin fontawesome {
	font-family: "FontAwesome";
}

/* ----Transition effects--------------------------------------------------------------- */

@mixin transition($speed) {
	@if $speed == fast {
		transition: .2s ease;
	} @elseif $speed == medium {
		transition: .5s ease;
	} @elseif $speed == slow {
		transition: 1s ease;
	}
}